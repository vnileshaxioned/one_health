// font properties
@mixin fontProperty($family: null, $size: null, $style: null, $weight: null, $line-height: null) {
  font-family: $family;
  font-size: $size;
  font-style: $style;
  font-weight: $weight;
  line-height: $line-height;
}

// for flex
@mixin flexBox($name: null, $align-content: null, $align-items: null, $direction: null, $wrap: null, $justify: null) {
  @include displayFlex(display, $name);
  @include alignContent(align-content, $align-content);
  @include alignItem(align-items, $align-items);
  @include flexWrap(flex-wrap, $wrap);
  @include flexDirection(flex-direction, $direction);
  @include justifyContent(justify-content, $justify);
}

// vendor prefixes started here
@mixin flexBasis($value) {
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

@mixin displayFlex($property, $value) {
  #{$property}: -webkit-box;
  #{$property}: -ms-flexbox;
  #{$property}: $value;
}

@mixin alignItem($property, $value) {
  -webkit-box-align: $value;
  -ms-flex-align: $value;
  #{$property}: $value;
}

@mixin alignContent($property, $value) {
  -ms-flex-line-pack: $value;
  #{$property}: $value;
}

@mixin flexDirection($property, $value) {
  @if (($value =='row') or ($value =='row-reverse')) {
    -webkit-box-orient: horizontal;

    @if $value =='row' {
      -webkit-box-direction: normal;
    }

    @else if $value =='row-reverse' {
      -webkit-box-direction: reverse;
    }
  }

  @else if (($value =='column') or ($value =='column-reverse')) {
    -webkit-box-orient: vertical;

    @if $value =='column' {
      -webkit-box-direction: normal;
    }

    @else if $value =='column-reverse' {
      -webkit-box-direction: reverse;
    }
  }

  -ms-#{$property}: $value;
  #{$property}: $value;
}

@mixin flexWrap($property, $value) {
  -ms-#{$property}: $value;
  #{$property}: $value;
}

@mixin justifyContent($property, $value) {
  -webkit-box-align: $value;
  -ms-flex-align: $value;
  #{$property}: $value;
}

@mixin transform($value) {
  -webkit-transform: $value;
  -ms-transform: $value;
  transform: $value;
}

@mixin objectFit($value) {
  -o-object-fit: $value;
  object-fit: $value;
}

@mixin transition($value) {
  -webkit-transition: $value;
  -o-transition: $value;
  transition: $value;
}

// vendor prefixes ends here

// responsive
@mixin responsive($value) {
  @media only screen and (max-width: $value) {
    @content;
  }
}

@mixin reverseResponsive($value) {
  @media only screen and (min-width: $value) {
    @content;
  }
}

@mixin customResponsive($min-value, $max-value) {
  @media only screen and (min-width: $min-value) and (max-width: $max-value) {
    @content;
  }
}